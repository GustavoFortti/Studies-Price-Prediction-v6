    def regression(self, data: object, report: object) -> None:
        self.data = data
        self.report = report
        x_train, x_test, y_train, y_test = data.get_train_test()

        self.model = Sequential()
        # 64 120 200 300
        self.model.add(LSTM(300, return_sequences=True, input_shape=(x_train.shape[1], x_train.shape[2])))
        self.model.add(Dropout(0.20))
        
        self.model.add(LSTM(300, return_sequences=True))
        self.model.add(Dropout(0.20))
        # 64 120 200 300
        self.model.add(LSTM(300, return_sequences=False))
        self.model.add(Dropout(0.20))

        self.model.add(Dense(100, activation='relu'))
        self.model.add(Dense(100, activation='relu'))
        self.model.add(Dense(100, activation='relu'))
        self.model.add(Dense(1))

        self.model.compile(loss='mse', optimizer='adam', metrics=['mean_absolute_percentage_error'])
        self.model.fit(x_train, y_train, epochs=10, batch_size=42, shuffle=True, validation_data=(x_test, y_test), verbose=1)

        self.print_graph()
        self.model.save(self.path)